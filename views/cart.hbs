<link rel="stylesheet" href="stylesheets/cartstyle.css">

<body>

    <scetion>
        <div class="container mt-5">
            {{#each cart.products}}
            <div class="row mt-2">
                <div class="col-md-2">
                    <div class="card">
                        <img class="card-img-top" src="/uploads/{{this.product.images.[0]}}" alt="Card image cap">
                    </div>
                </div>
                <div class="col-md-6">
                    <p class="cart-pcls">{{this.product.name}}</p>
                    <div style="margin-left: 10px;margin-top: 20px;margin-bottom: 20px;">
                        <label for="color" class="form-label" style="font-weight: bold;">Color</label>
                        <select class="form-control" id="color{{this._id}}" name="color"
                            style="width: 90px;font-weight :bold" onchange="updateColor('{{this._id}}')">
                            {{!-- <option value="1" selected>1</option> --}}
                            {{#each this.product.colors_available}}
                            <option value="{{this}}" {{#if (eq this ../color)}}selected{{/if}}>{{this}}</option>
                            {{/each}}
                        </select>
                    </div>

                    <div style="margin-left: 10px;margin-top: 20px;margin-bottom: 20px;">
                        <label for="color" class="form-label" style="font-weight: bold;">Size</label>
                        <select class="form-control" id="size{{this._id}}" name="size"
                            style="width: 60px;font-weight :bold" onchange="updateSize('{{this._id}}')">
                            {{!-- <option value="1" selected>1</option> --}}
                            {{#each this.product.sizes_available}}
                            <option value="{{this}}" {{#if (eq this ../size)}}selected{{/if}}>{{this}}</option>
                            {{/each}}
                        </select>
                    </div>


                    <div class="cart-size">
                        Qty:
                        <div class="input-group">
                            <button class="btn btn-sm btn-outline-secondary"
                                onclick="updateQuantity('{{this._id}}', -1)">-</button>


                            <input type="text" class="form-control text-center" value="{{this.quantity}}" readonly
                                style="max-width: 60px;">


                            <button class="btn btn-sm btn-outline-secondary"
                                onclick="updateQuantity('{{this._id}}', 1)">+</button>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-md-2">
                            <div class="dropdown mt-2">

                                <a href="delete-cart/{{_id}}" onclick="return confirmDelete()"><button
                                        class="btn btn-sm btn-danger">
                                        {{!-- <i class="fas fa-trash-alt"></i> --}}
                                        Delete
                                    </button></a>
                            </div>
                        </div>
                    </div>

                </div>


                <div class="col-md-2 cart-size">â‚¹ {{this.product.price}}</div>
            </div>

        </div>

        <hr style="border-width:2px;">
        {{/each}}


        <div>
            <a href="/checkout">
                <button type="button" class="btn btn-secondary cart-buyButton w-90">Proceed to buy</button>
            </a>
        </div>

        </div>
        </section>
        <script>
            function confirmDelete() {
                return confirm("Are you want to delete this category?");
            }

            async function updateQuantity(productId, change) {
                try {
                    const response = await fetch('/cart/update', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productId, change }),
                    });
                    if (response.ok) {
                        location.reload(); // Reload to reflect updated quantity
                    } else {
                        alert('Error updating quantity');
                    }
                } catch (err) {
                    console.error(err);
                    alert('Error updating quantity');
                }
            }

            async function updateSize(productId, size) {
                try {
                    const size = document.getElementById(`size${productId}`).value;
                    const response = await fetch('/cart/updatesize', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productId, size }),
                    });
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error updating size');
                    }
                } catch (err) {
                    console.error(err);
                    alert('Error updating size');
                }
            };
            async function updateColor(productId, color) {
                try {
                    const color = document.getElementById(`color${productId}`).value;
                    const response = await fetch('/cart/updatecolor', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ productId, color }),
                    });
                    if (response.ok) {
                        location.reload();
                    } else {
                        alert('Error updating color');
                    }
                }
                catch (err) {
                    console.error(err);
                    alert('Error updating color');
                }
            }

        </script>


</body>

</html>